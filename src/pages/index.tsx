import Head from "next/head";
import { useAppSelector } from "../hooks/store";
import { useEffect } from "react";
import { getCoordinates } from "../store/slices/coordinates";
import { useAppDispatch } from "../hooks/store";
import CurentWeatherCard from "../components/CurentWeatherCard/CurentWeatherCard";
import ForecastWeatherComponent from "../components/ForecastWeatherComponent/ForecastWeatherComponent";
import forcast from "../fakeDate.json";
import { ForecastWeather } from "@/store/slices/forcastWeather/forcastWeather.types";
import ErrorMessage from "../components/ErrorMessasge/ErrorMessage";
import LoaderWheel from "@/components/LoaderWheel/LoaderWheel";

export default function Home() {
  const dispatch = useAppDispatch();
  const { isLoadingCoordinates, coordinatesError } =
    useAppSelector((state) => state.coordinates);
  // const {
  //   error: forecastError,
  //   forcast,
  //   isLoading: forecastIsLoading,
  // } = useAppSelector(state => state.forecastWeather);

  const { weather, isLoadingWeather, weatherError } = useAppSelector(
    (state) => state.weather
  );

  useEffect(() => {
    dispatch(getCoordinates());
  }, []);

  if (isLoadingCoordinates || isLoadingWeather) {
    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <LoaderWheel />
        </main>
      </>
    );
  }

  if (coordinatesError || weatherError) {
    const error = coordinatesError || weatherError || "";

    return (
      <>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <ErrorMessage message={error} />
        </main>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <CurentWeatherCard {...weather!} />
        <ForecastWeatherComponent
          {...(forcast! as unknown as ForecastWeather)}
        />
      </main>
    </>
  );
}
